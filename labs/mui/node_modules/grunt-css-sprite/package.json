{
  "name": "grunt-css-sprite",
  "description": "A grunt plugin to help front engineer creating css sprite.",
  "version": "0.1.4",
  "homepage": "https://github.com/laoshu133/grunt-css-sprite",
  "author": {
    "name": "mikongge",
    "email": "admin@laoshu133.com",
    "url": "http://laoshu133.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/laoshu133/grunt-css-sprite.git"
  },
  "bugs": {
    "url": "https://github.com/laoshu133/grunt-css-sprite/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/laoshu133/grunt-css-sprite/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "async": "^0.9.0",
    "spritesmith": "~0.19.2"
  },
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-contrib-jshint": "~0.10.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.5"
  },
  "keywords": [
    "gruntplugin",
    "sprite",
    "css",
    "autosprite"
  ],
  "readmeFilename": "README.md",
  "readme": "## grunt-css-sprite\n\n### 这是什么\n\n这是一个帮助前端开发工程师将css代码中的切片合并成雪碧图的工具；\n其灵感来源 `grunt-sprite`，由于其配置参数限制目录结构等，不能满足通用项目需求，现重新造轮子发布；\n它的主要功能是：\n\n1. 对css文件进行处理，收集切片序列，生成雪碧图\n2. 在原css代码中为切片添加`background-position`属性\n3. 生成用于高清设备的高清雪碧图，并在css文件末尾追加媒体查询代码\n4. 支持 `image-set` 配置高清雪碧图\n4. 在引用雪碧图的位置打上时间戳\n5. 在样式末尾追加时间戳\n6. 按照时间戳命名文件\n\n  \n### 配置说明\n\n    // 自动雪碧图\n    sprite: {\n        options: {\n            // sprite背景图源文件夹，只有匹配此路径才会处理，默认 images/slice/\n            imagepath: 'test/slice/',\n            // 映射CSS中背景路径，支持函数和数组，默认为 null\n            imagepath_map: null,\n            // 雪碧图输出目录，注意，会覆盖之前文件！默认 images/\n            spritedest: 'test/publish/images/',\n            // 替换后的背景路径，默认 ../images/\n            spritepath: '../images/',\n            // 各图片间间距，如果设置为奇数，会强制+1以保证生成的2x图片为偶数宽高，默认 0\n            padding: 2,\n            // 是否使用 image-set 作为2x图片实现，默认不使用\n\t\t\tuseimageset: false,\n            // 是否以时间戳为文件名生成新的雪碧图文件，如果启用请注意清理之前生成的文件，默认不生成新文件\n            newsprite: false,\n            // 给雪碧图追加时间戳，默认不追加\n            spritestamp: true,\n            // 在CSS文件末尾追加时间戳，默认不追加\n            cssstamp: true,\n            // 默认使用二叉树最优排列算法\n            algorithm: 'binary-tree',\n            // 默认使用`pngsmith`图像处理引擎\n            engine: 'pngsmith'\n        },\n        autoSprite: {\n            files: [{\n                // 启用动态扩展\n                expand: true,\n                // css文件源的文件夹\n                cwd: 'test/css/',\n                // 匹配规则\n                src: '*.css',\n                // 导出css和sprite的路径地址\n                dest: 'test/publish/css/',\n                // 导出的css名\n                ext: '.sprite.css'\n            }]\n        }\n    }\n\n* **files**\n\n    使用标准的动态文件对象\n    \n* **options**\n\n    * `imagepath` \n        必填项，sprite背景图源文件夹，只有匹配此路径才会处理，默认 images/slice/\n\n    * `imagepath_map`\n    \t映射CSS中背景路径，支持函数和数组，默认为 null\n        \n    * `spritedest` \n        必填项，雪碧图输出目录，注意，会覆盖之前文件！默认 images/\n        \n    * `spritepath` \n        必填项，替换后的背景路径，默认 ../images/\n\n    * `padding` \n        可选项，指定各图片间间距，默认 0\n\t\n\t* `useimageset` \n        可选项，是否使用 image-set 作为2x图片实现，默认不使用\n\n    * `newsprite` \n        可选项，是否以时间戳为文件名生成新的雪碧图文件，如果启用请注意清理之前生成的文件，默认不生成新文件\n\n    * `spritestamp` \n        可选项，是否给雪碧图追加时间戳，默认不追加\n\n    * `cssstamp` \n        可选项，是否在CSS文件末尾追加时间戳，默认不追加\n        \n    * `engine` \n        可选项，指定图像处理引擎，默认选择`pngsmith`\n\n    * `algorithm` \n        可选项，指定排列方式，有`top-down` （从上至下）, `left-right`（从左至右）, `diagonal`（从左上至右下）, `alt-diagonal` （从左下至右上）和 `binary-tree`（二叉树排列） 五种供选择，默认 `binary-tree`；参考 [Layout](https://github.com/twolfson/layout/)\n\n### 载入插件\n\n请不要忘了载入插件\n\n    grunt.loadNpmTasks('grunt-css-sprite');    \n    \n### 打个比方\n\n有一个类似这样的目录结构：\n        \n    ├── test/                \n        ├── css/    \n            └── icon.css        \n        ├── images/    \n            ├── slice/    \n                ├── icon-a.png\n                ├── icon-a@2x.png        \n                ├── icon-b.png\n                └── icon-b@2x.png\n        └── publish/\n            ├── css/\n                └── icon.sprite.css\n            └── images/    \n                ├── icon.png\n                └── icon@2x.png\n        \n`css/icon.css` 调用`images/slice/`目录下的切片，`grunt-css-sprite` 会将 `css/icon.css` 进行处理。\n\n`publish/css/` 目录下是处理完成的样式 `icon.sprite.css` ，而 `publish/images/` 目录下是合并完成的雪碧图。\n\n### 特别注意\n\n1. 生成后的雪碧图将以源css文件名来命名\n2. 仅当CSS中定义`url(xxxx)`的路径匹配参数`imagepath`才进行处理，和具体`background`，`background-image`CSS无关，这里有区别于`grunt-sprite`\n3. 理论上高清切片都应该是源切片尺寸的2倍，所以所有高清切片的尺寸宽和高都必须是偶数\n4. 理论上所有的切片都应该是`.png`格式，`png8` `png24` 和 `png32`不限\n5. `spritesmith` 默认只支持png格式，如果有其他格式需要，请参考 *可选依赖*\n\n### 可选依赖\n\n`grunt-css-sprite` 使用 [spritesmith](https://github.com/Ensighten/spritesmith) 作为内部核心实现\n\n经 [Mark](https://github.com/jsmarkus) 提醒，之前对于`gm` 的依赖纯属多余；如果你需要将图片处理引擎切换为`gm`或者其他引擎，请手动安装对应的依赖包。\n举例 [Graphics Magick(gm)](http://www.graphicsmagick.org/) 依赖的安装流程：\n    \n* **Graphics Magick(gm)**\n\n    * Mac\n        // 安装GM图形库    \n        ```\n        brew install GraphicsMagick    \n        npm install gmsmith\n        ```\n\n    * Windows\n        前往官方网站[下载安装GM图形库](http://www.graphicsmagick.org/download.html)    \n        然后命令行执行：\n        ```\n        npm install gmsmith\n        ```\n\n### 版本记录\n\n`0.0.1` 从 `grunt-sprite` 迁移改进\n\n`0.0.2` 完善部分处理流程，优化图片重复，规避 `a[href*='}{']::after{ content:'}{';}` 这类奇葩CSS\n\n`0.0.5` 修改 `spritesmith` 依赖为 `0.18.0`，实现`padding`参数；优化Retina处理流程，拼合选择器，减小CSS文件体积 `.a,.b,.c{ background-image:url(icon.png); background-size:95px auto;}`\n\n`0.0.6` 修正生成Retina CSS部分一个严重的逻辑错误，去除重复选择器生成；完善测试用例；添加`grunt jshint`任务\n\n`0.0.7` 修正`backgroun[-image]`之后缺少分号时造成新生成的CSS出错，修改默认处理引擎为`pngsmith`，取消对`gm`的依赖\n\n`0.0.8` 修正`getSliceData`获取所有CSS背景属性正则匹配\n\n`0.0.9` 重构操作流程，添加 `image-set` 支持\n\n`0.1.2` 添加，完善 `imagepath-map` 参数\n\n`0.1.3` 修正 #11 #12\n\n### 致谢\n\n感谢 [spritesmith](https://github.com/Ensighten/spritesmith)\n\n感谢 [Meters](https://github.com/hellometers)\n\n感谢 [Mark](https://github.com/jsmarkus) 修正 [#1](https://github.com/laoshu133/grunt-css-sprite/pull/1)，提出 [#2](https://github.com/laoshu133/grunt-css-sprite/pull/2) \n\n> 使用中有任何问题，请提交 [Issue](https://github.com/laoshu133/grunt-css-sprite/issues) 或 [与我联系](http://www.laoshu133.com)\n",
  "_id": "grunt-css-sprite@0.1.4",
  "_from": "grunt-css-sprite@~0.1.4"
}
